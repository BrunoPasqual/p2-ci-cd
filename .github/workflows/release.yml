name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'

      - name: Instalar dependências
        run: npm install

      - name: Verificar secret PAT_TOKEN
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          if [ -z "$PAT_TOKEN" ]; then
            echo "Erro: PAT_TOKEN não está definido!"
            exit 1
          else
            echo "Secret PAT_TOKEN está definido."
          fi

      - name: Rodar semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: npx semantic-release

  docker_build_and_push:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extrair versão da tag
        id: extract_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build da imagem com versão e latest
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/p2-backend:${{ steps.extract_tag.outputs.TAG }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/p2-backend:${{ steps.extract_tag.outputs.TAG }} ${{ secrets.DOCKER_USERNAME }}/p2-backend:latest

      - name: Push das imagens para Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/p2-backend:${{ steps.extract_tag.outputs.TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/p2-backend:latest
